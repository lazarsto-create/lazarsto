grid8player.effects['responsive-position']={
styles: `    `,  init(element, pos, size, props) {    this.dom = element;    var vars = props;    if(vars.targetlayer){      function waitForElm(selector) {          return new Promise(resolve => {              if (document.querySelector(selector)) {                  return resolve(document.querySelector(selector));              }              const observer = new MutationObserver(mutations => {                  if (document.querySelector(selector)) {                      resolve(document.querySelector(selector));                      observer.disconnect();                  }              });              observer.observe(document.body, {                  childList: true,                  subtree: true              });          });      }      var l =  grid8player.getDOMLayerByID(vars.targetlayer.guid)      if(l){w8(l)}else{waitForElm('#layer-'+vars.targetlayer.guid).then((w)=>{w8(w)})}     function w8(l){      if (!l.resp && vars.targetlayer.effects && vars.targetlayer.effects && vars.targetlayer.effects.map((x) => x.id).toString().indexOf('responsive')>-1){        l.addEventListener("resp",(e)=>{my8(l)}, false);        }else{        my8(l)       }     }    }else{     my8();    }    function my8(e){      if(e){                 if(!element.offsetParent){         var hidden8 = document.getElementsByTagName('style')[0];         hidden8.innerHTML = hidden8.innerHTML.replace(/(?<=.hidden8)([^]*?)}/ , "{visibility:hidden;}");        }               const b1=element.getBoundingClientRect(),b2=e.getBoundingClientRect(),a1x=Number(vars.alignX),a1y=Number(vars.alignY),a2=Number(vars.side),l=["c","t","tr","r","br","b","bl","l","tl"];         var x1=(a1x-1)*b1.width/2,x2=(b2.left+b2.right)/2,y1=(a1y-1)*b1.height/2,y2=(b2.top+b2.bottom)/2        if(a2>5)x2=b2.left;        if(a2>1&&a2<5)x2=b2.right;        if(l[a2].indexOf("t")>-1)y2=b2.top;        if(l[a2].indexOf("b")>-1)y2=b2.bottom;        if(a1x>0)gsap.set(element,{x:x2+vars.offsetX-x1})        if(a1y>0)gsap.set(element,{y:y2+vars.offsetY-y1})      }      element.dispatchEvent(new CustomEvent("resp", {}))      element.resp = true;    }  },   animate(timeline) {  },    onMouseClick() {  },  onMouseOver() {  },  onMouseOut() {  },  onSwipe(swipe) {  }  };