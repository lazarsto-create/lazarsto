grid8player.components['carousel']={
styles: `  #$id>#nav{    z-index:999;    display: flex;    position:absolute;     }  #$id>#container{    position:absolute;    top:50%;    left:50%  } #$id .rotY{   transform:translate3d(var(--bb,0px),0,calc(1px * var(--tZ,0) + var(--radius,0)))rotateY(var(--rot8,0))translateZ(calc(var(--radius,0) * -1))!important; }  #$id .rotX{   transform:translate3d(0,var(--bb,0px),calc(1px * var(--tZ,0) + var(--radius,0)))rotateX(var(--rot8,0))translateZ(calc(var(--radius,0) * -1))!important; } #$id svg{       color:$nav-color;       fill-opacity: 0;        transition:inherit; } #$id svg>*{       pointer-events: none;      }  #$id .sel{        fill-opacity: 1;      }      `,    html: `<svg xmlns="http://www.w3.org/2000/svg"><defs><filter id="motiBlur">      <feGaussianBlur id="gBlur" in="SourceGraphic" stdDeviation="10" /></defs></filter></svg><div id="container"></div><div id="nav"></div>`,    init(element, pos, size, props) {    const self=this,H=manifest.settings.height,W=manifest.settings.width,w=size.w,h=size.h,vars=this.vars=props    this.dom=element;    this.dom.idle = true;    this.dom.drag = vars.momentum >= 0    this.dom.index = -1    var saf = true    this.dom.swipe8=["lr","rl","ud","du","nn"][self.vars.swipe].split('')    var layers,tot,distance,rest=0,speed=0,slow=0,auto=false,radius,next8,prev8,wrap=gsap.utils.wrap(-1,1),ex,gblur,old=0, zoom = {keyframes: [{scale:vars.zoom/100,ease:vars.ease1},{scale: 1,ease:vars.ease2}],duration:vars.duration},m=(vars.type<3?1:2),clamp=gsap.utils.clamp(-m,m),tl=gsap.timeline({id:"rik"}),obj={val:0},vert=vars.direction<2,Z=(vert?'Y':'X'),z=(vert?'x':'y'),rot="rotation"+Z, threshold = vars.threshold;    if(threshold==0){        threshold = [w,w,h,h,100][self.vars.swipe]    }else if(threshold<0){        threshold = [W,W,H,H,100][self.vars.swipe]    }    this.dom.run=function (timeline){        const nav=element.querySelector("#nav"), container=element.querySelector("#container")        if(vars['motion-blur']>0){            container.style.webkitFilter=container.style.filter="url('#motiBlur')";            gblur = element.querySelector("#gBlur")        }        var ori=self.vars.origin.replaceAll("center","50%").split(" "),v=vars.global?[W,H]:[w,h];        for (var i=0;i<ori.length;i++){            ori[i]= parseFloat(ori[i])*(ori[i].includes("%")?v[i]/100:1) -[w,h][i]/2-(vars.global?1:0)*pos[['x','y'][i]]+'px';        }        ori=ori.join(" ")        gsap.set(container,{'-webkit-transform-style':' preserve-3d','transform-style':'preserve-3d',perspective:[W,H,Math.min(W,H),Math.max(W,H),(W+H)/2,100][self.vars.perspective]*self.vars.amount/100,'perspective-origin':ori})        gsap.set(container.parentNode,{'-webkit-transform-style':'flat','transform-style':'flat'})        layers=Array.from(document.querySelectorAll(vars.selector));        tot=layers.length;        if(vars.type>(tot<3?0:1)){vars.margin=0;vars.angle=180}        if(vars.spacing==1){distance=vars.distance}else{            distance = parseFloat(layers[0].style[(vert?'width':'height')])            if(vars.spacing==0)distance+=vars.distance;            if(vars.spacing==2)distance+= distance*vars.distance/100;            if(vars.spacing==3)distance*= vars.distance/100;        }        next8=grid8player.getDOMLayerByID(vars.nextBtn?vars.nextBtn.guid:null);        prev8=grid8player.getDOMLayerByID(vars.prevBtn?vars.prevBtn.guid:null);        if(tot<2) {         gsap.set([nav,next8,prev8],{display:"none"})         container.appendChild(layers[0])         gsap.set(layers[0],{x:"-50%",y:"-50%"})         return        }          if(vars['nav-size']>0){            const s='<svg xmlns="http://www.w3.org/2000/svg" height="100%" id="',v='" viewBox="-5 ',g=' fill="currentColor"/></svg>'            if (next8==element)next8=null            if (prev8==element)prev8=null            var n=(next8==null&&prev8==null),a=(n?-1:0),b=tot+(n?1:0)            var hor=vars["nav-pos"]<2            for (let i=a;i<b;i++) {                const svg=document.createElementNS('http://www.w3.org/2000/svg','svg')                nav.appendChild(svg)                if(i<0||i==tot){                    svg.outerHTML=s+(i<0?"pb":"nb")+(hor?'" style="rotate:90deg;scale:1.3;margin: 40% 0;':'')+v+ `0 14.9 9.762"><path d="M-38.5-49l2.789,4.881L-38.5-39.238h1.395l3.486-4.881L-37.105-49Z" transform="${(i<0?"scale(-1 1) translate(33.6 49)":"translate(38.5 49)")}"fill-opacity="1"`+g                }else{                    j=vars.direction%2?(i==0?0:tot-i):i;                    svg.outerHTML= s+'c'+(j==0?'0" class="sel':j)+v+`-5 10 10" ><circle r="4" stroke="currentColor"`+g                }            }            nav.addEventListener(grid8player.getClickEvent(),m8);            nav.style[hor?'width':'height']=vars['nav-size']+"px"            nav.style[["left","right","top","bottom"][vars["nav-pos"]]]='0px'            nav.style[hor?'top':'left']="50%"            nav.style.transform= `translate(${hor?"0%,-50%":"-50%,0%"})`            if(hor)nav.style.flexFlow='column';        }        if(next8)next8.addEventListener(grid8player.getClickEvent(),n8)        if(prev8)prev8.addEventListener(grid8player.getClickEvent(),p8)         function m8(e){            e.stopPropagation();            if(rest||speed){pUp();return;}            var id=e.target.id            const num = Number(id.substring(1))            if(isNaN(num)||num==self.dom.index){                if(id.charAt(0)=='p')self.dom.slide(1)                if(id.charAt(0)=='n')self.dom.slide(-1)                return;            }            var d=vars.direction%2?self.dom.index-num:num-self.dom.index            if(d<-tot/2)d+=tot            if(d>tot/2)d-=tot            self.dom.slide(-d)        }        if (vars.type!=2)vars.billboarding=false        if (vars.type%2||vars.type==2)radius=-distance/(tot<3||vars.type>2?2:2*Math.tan(Math.PI*vars.angle/(180*tot)))        if(vars.order>1){            const gprop= (g) => gsap.getProperty(g,vars.order<4?"x":"y")            layers.sort(function(a, b){return gprop(a) - gprop(b)});        }        if(vars.order%2)layers.reverse()        if(vars.direction%2)layers.reverse().unshift(layers.pop())        const calc="calc(var(--mar,0px) - 50%)"        if(saf)gsap.set(container,{"--radius":radius+"px"})        for (let i=0; i < layers.length; i++) {            container.appendChild(layers[i])            var j=(i>tot/2?i-tot:i)            if(vars.type>0){                var tmp=layers[i].style.transformOrigin.split(" ")                tmp.push("50%")                layers[i].style.transformOrigin=tmp[0]+' '+tmp[1] +(saf?"":" "+radius+"px")                if(saf)layers[i].classList.add("rot"+Z)            }            gsap.set(layers[i],{x:0,y:0})            layers[i].i =2*j/tot            layers[i].style.translate=vars.margin==0?"-50% -50%":(vert?calc+" -50%":"-50% "+calc)            if(vars.zoom<100&&vars.type<2) layers[i].style.scale='var(--focus,1)'        }        if(grid8player.bDebugMode){            var rik = gsap.globalTimeline.getById("rik")            if(rik)rik.kill();            timeline.add(tl,0);        }else{            nav.style.transition= "fill-opacity "+vars.duration+'s'        }        self.dom.slide(0,vars['auto-loops'])        self.dom.index = 0        timeline.call(trigger,[layers[0],false],0.001)    }.bind(this);    if(this.dom.drag) $('#ad').addEventListener( 'pointerdown', pDown );    function myTick() {        speed = speed*0.99        slow = slow*0.9    }    function autoKill(){        var childs = tl.getChildren(),kill=true        childs.forEach((child) => {            if(child.isActive()&&child.vars.id != 'zoom'){kill=false}else{child.kill()}        });        if(kill)tl.clear();        auto=false;    }    function pDown(e){        if(self.dom.idle||e.target.parentNode==nav||e.target==next8||e.target==prev8)return;        if(auto)autoKill()        $('#ad').addEventListener( 'pointermove', pMove );        $('#ad').addEventListener( 'pointerup', pUp );        $('#ad').addEventListener( 'pointerout', pUp );        gsap.ticker.add(myTick);        slow = vars.duration/2        speed = 0    }    function pMove(e){        if(self.dom.idle)return        var mX = e.movementX, mY = e.movementY, m = [-mX,mX,-mY,mY,0][self.vars.swipe]/300        rest += m        speed = (speed+m)/2        self.dom.slide(m,0,1)    }    function pUp(e){        speed = Math.round(20*speed)        $('#ad').removeEventListener( 'pointermove', pMove );        $('#ad').removeEventListener( 'pointerup', pUp );        $('#ad').removeEventListener( 'pointerout', pUp );        gsap.ticker.remove(myTick);        var bal = 0        if(Math.abs(rest)>0.5){            self.dom.slide((1-Math.abs(rest))*Math.sign(rest),0,-1)            bal=Math.sign(rest)        }else{            self.dom.slide(-rest,0,-1)        }        self.dom.slide(speed,0,-1)        speed = rest = 0    }    function trigger(a,b){        if(vars.custom){            let e = manifest.customEvents.find(x=>x.id==vars.custom)            grid8player.dispatchEvent(self.dom, e.name, Array.from(a.childNodes).concat(a))            if(b) grid8player.dispatchReverseEvent(self.dom, e.name, Array.from(b.childNodes).concat(b))        }    }    function balls(i){        if(self.dom.index==i)return        trigger(layers[i],layers[self.dom.index])        self.dom.index=i;        if(vars['nav-size']<=0)return        (nav.querySelector('.sel')||nav).classList.remove("sel");        if(nav)nav.querySelector('#c'+self.dom.index).classList.add("sel");    }    this.dom.slide=function(d,a,s=0){        var duration = s>0?slow:vars.duration;        old=0;        if(vars.direction%2)d*=-1        var tween={ease:vars.ease,i:'+=' +(2*d/tot),id:'carousel',onUpdate:flow,modifiers:{i:(i,t)=>{i=wrap(parseFloat(i));t.j=i*tot/2;return i}}}        if(d==0||a){gsap.set(layers,tween)}        if(a){            auto=true            const D=vars.direction%2?1:-1            tween.i='+='+2/tot*D            const b=(Math.floor(a)*tot+(a%1)*10)-(a>1&&a<2?1:0)            for(let i=1;i<b;i++){                var t = i*(duration + vars['auto-wait'])+vars['auto-delay']                tl.to(layers,duration,tween,t);                if(vars.zoom<100&&vars.type>1)tl.to(container,Object.assign({'id':'zoom'}, zoom),t)            }        }else{            if(d==0){auto=false;return;}            if(auto)autoKill()            if(vars.zoom<100&&vars.type>1){                if(s){                    if(s>0){                        gsap.to(container,{duration:vars.duration/8,scale:vars.zoom/100,ease:vars.ease1})                    }else{                        gsap.to(container,{duration:vars.duration/2,scale:1,ease:vars.ease2})                    }                }else{                    gsap.to(container,zoom)                }            }            var tweens = gsap.getTweensOf(layers).filter((l) => l.vars.id == 'carousel');            if(tweens.length){                tween.i='+=' +(2*d/tot+tweens[0].vars.i.slice(2)*(1-tweens[0].ratio))                tweens.forEach((twn) => twn.kill());            }            gsap.to(layers,duration,tween);        }    }    function flow(){        const progress=this.progress(),rot8 = saf?"--rot8":rot;        if(gblur&&!(rest||speed)){            var b = this.ratio-old;            old=this.ratio            b*=old%1==0?0:vars['motion-blur']*2            gblur.setAttribute("stdDeviation",vert?b+",0":"0,"+b);        }        layers.forEach(function(l,i){            if(vars.dispatch==0 && Math.abs(l.j)<0.5)balls(i)            if(Math.abs(l.j)<0.01&&(vars.dispatch==1||(vars.dispatch==2 && progress>0.99)))balls(i)            var obj={zIndex:Math.round(tot-Math.abs(l.j))},clamped=clamp(l.j)            if(vars.type<1){                if(vars.angle>0)obj[rot8]=vars.angle*clamped*(vert?-1:1)+(saf?"deg":"");                obj[z]=l.j*distance            }else{                if(vars.type==2&&vars.billboarding){                    var rad=l.i*Math.PI                    obj[z]= -Math.sin(rad)*radius                    obj.z=-Math.cos(rad)*radius                }else{                    obj[rot8]=(vars.type>2?clamped*90:vars.angle*l.i)*(vert?1:-1)+(saf?"deg":"");                    if(vars.type>2&&tot>3)obj.visibility=Math.abs(l.j)>=2?'hidden':'visible';                }            }            obj['--focus']=1-Math.abs(clamped)*(1-vars.zoom/100);            obj['--blur']=Math.abs(l.i)            if(vars.margin>0)obj['--mar']=vars.margin*clamped+'px';            if(saf){                obj['--bb']=parseFloat(obj[z]||0)+'px'                obj['--tZ']=parseFloat(obj.z||0)            }            gsap.set(l,obj)        });    }    function n8(e) {        e.stopPropagation();        if(rest||speed){pUp();return;}        self.dom.slide(-1)    }    function p8(e) {        e.stopPropagation();        if(rest||speed){pUp();return;}        self.dom.slide(1)    }},animate(timeline) {    this.dom.run(timeline)},onStart(first){    this.dom.idle = false;},onSwipe(direction) {    if(this.dom.drag||typeof direction != 'object')return;    if(direction.type.charAt(0)==this.dom.swipe8[0]) this.dom.slide(1);    if(direction.type.charAt(0)==this.dom.swipe8[1]) this.dom.slide(-1);}};