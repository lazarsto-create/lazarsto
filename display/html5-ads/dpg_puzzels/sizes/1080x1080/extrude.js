grid8player.effects['extrude']={
styles: `#$id{  --depth:$depth;  --padding:$padding;}#$id,#$id>.extrude,#$id>.silhouette{ transform-style: preserve-3d;}#$id>.extrude{  width:calc(100% - 2 * var(--padding,0%));  height:calc(100% - 2 * var(--padding,0%));  translate:var(--padding,0%) var(--padding,0%);}#$id>.extrude>*{  border: $border;  position: absolute;  box-sizing:border-box;}#$id>.extrude>.back {  width: 100%;  height: 100%;  background: $back;  transform: rotateY(180deg) translateZ(var(--depth)) ;}#$id>.extrude>.left {  left:0px;  transform-origin:left;  width: var(--depth);  height: 100%;  background: $left;  transform: rotateY(-90deg) translateX(-100%) ;}#$id>.extrude>.right {  transform-origin:right;  right:0px;  width: var(--depth);  height: 100%;  background: $right;  transform:   rotateY(90deg) translateX(100%);}#$id>.extrude>.top {  transform-origin:top;  width: 100%;  height: var(--depth);  background: $top;  transform:  rotateX(90deg)translateY(-100%) }#$id>.extrude>.bottom {  transform-origin:bottom;  bottom:0px;  width: 100%;  height: var(--depth);  background: $bottom;  transform: rotateX(-90deg)translateY(100%);}#$id>.silhouette,#$id>.silhouette>* {  width: 100%;  height: 100%;}#$id>.silhouette>* {transform: translateZ(calc(var(--slice) * var(--depth)));mask-size: contain;position: absolute;}        `,  init(el, pos, size, props,mastertimeline, shot) {    const vars = props     function malfunction (v){       let o=manifest.settings.dynamicValues.find(x=>x.id==v),p=(o.shotLevel==true)?"s"+shot+"_":"";       return (o==undefined?"":grid8player.dynamicData[p+o.name])      }    if(vars.type==1){      gsap.set(el,{"filter":"drop-shadow("+vars.offsetX+" "+vars.offsetY+" "+vars.depth+" "+malfunction(vars.color)+")"})   }else{    var d = document.createElement('div'), a = ["top","bottom","left","right","back"]    if(vars.type>1){      d.className = "extrude"     a.forEach((l) => {      var c = document.createElement('div');      c.className = l;      d.appendChild(c);     });   }else{      d.className = "silhouette"         for (var i = 1; i <= vars.amount; i++) {      var s = document.createElement('div');      gsap.set(s,{"--slice":-1*i/vars.amount,'mask-image': 'url('+malfunction(vars['mask-image'])+')',background:malfunction(vars.color)})      d.appendChild(s);     }    }    el.insertAdjacentElement(vars.insert, d)    }  },  animate(timeline) {  },  onStart(first){  }};