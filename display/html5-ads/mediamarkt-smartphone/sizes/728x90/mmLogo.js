grid8player.components['mmLogo']={
styles: `        #$id>svg {            color:$color;            position: absolute;            top: 50%;            left: 50%;            transform: translate(-50%,-50%);            width: 100%;            height: 100%;          }    `,  html: `     <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="currentColor" viewBox="0 0 2144 300"><defs><path id="g8" d="M8-22c34-17 103 43 67 143-28 15-47 16-47 16 17-21 35-51 35-93C63-1 40-25 8-22"/><path id="m8" d="M444 15h-49L266 186l31-171h-42L21 286h59L241 99l-35 187h39l140-186-33 186h43Z"/><path id="a8" d="m949 105-2 13a72 72 0 0 0-44-14c-43 0-84 35-98 78-3 7-5 24-5 34 1 42 28 75 69 74 17 0 34-5 49-14l-2 10h41l33-181Zm-11 93c-6 31-33 52-61 52-25 0-42-24-37-50 6-31 30-54 60-54s44 23 38 52"/><clipPath id="c1"><path d="M1147 0a150 150 0 0 1 0 300h1000V0Z"/></clipPath><clipPath id="c2"><path d="M0 0v300h1150a150 150 0 0 1 0-300Z"/></clipPath></defs><g id="markt" clip-path="url(#c1)"><use xlink:href="#m8" id="m2" x="1220"/><use xlink:href="#a8" id="a2" x="827"/><path id="r1" d="M1905 103h-6c-10 0-23 4-34 11l1-9h-41l-33 181h41l19-104c7-29 24-40 43-40h3Z"/><path id="k1" d="m1961 186 66-81h-49l-42 51 19-104h-41l-43 234h41l14-76 45 76h50l-60-100Z"/><path id="t1" d="M2013 144h22l-27 142h42l26-142h39l7-39h-39l10-53h-41l-10 53h-24Z"/></g><g id="media" clip-path="url(#c2)"><use xlink:href="#a8" id="a1"/><path id="i1" d="m779 100 9-48h41l-9 48Zm8 186h-42l33-181h41Z"/><path id="d1" d="m739 52-12 67a71 71 0 0 0-45-15c-42 0-82 33-96 75h-1v1c-6 18-6 33-6 38 2 41 29 73 69 72 18 0 35-6 51-15l-2 11h41l42-234Zm-23 146c-6 31-32 52-60 52-21 0-44-18-37-50 6-31 31-54 59-54s44 23 38 52"/><path id="e1" d="M579 215c6-13 6-35 6-35 0-44-30-76-72-76-40 0-79 28-97 64-14 30-9 53-9 53 3 39 31 69 73 69s77-27 95-66h-44a55 55 0 0 1-46 26c-17 0-36-12-38-35h132Zm-73-69c20 0 32 11 36 28h-83c11-17 28-28 47-28Z"/><use xlink:href="#m8" id="m1"/></g><g transform="translate(1150 149)"><g id="spiral"><use xlink:href="#g8"/><use xlink:href="#g8" transform="rotate(40)"/><use xlink:href="#g8" transform="rotate(80)"/><use xlink:href="#g8" transform="rotate(120)"/><use xlink:href="#g8" transform="rotate(160)"/><use xlink:href="#g8" transform="rotate(200)"/><use xlink:href="#g8" transform="rotate(240)"/><use xlink:href="#g8" transform="rotate(280)"/><use xlink:href="#g8" transform="rotate(320)"/></g></g></svg>    `,  init(element, pos, size, props) {    const vars = props, svg = element.querySelector("svg"),  self = this, spiral = svg.querySelector("#spiral"),media = svg.querySelector("#media").childNodes, markt = svg.querySelector("#markt").childNodes, origin = "161.2 157.85"    this.dom = element;      if(!grid8player.bDebugMode){this.dom.once=vars.once}    const zero=this.dom.once?null:0    if(vars.fit <2){     svg.style[vars.fit>0?"width":"height"] = "auto";    }       const additional = {duration:vars.du, transformOrigin:origin,rotate:'+='+vars.spin,ease:vars.ea}       additional.onUpdate = function() {       spiral.style.scale = gsap.utils.interpolate(vars.zoom, 1, Math.cos(this.progress()*Math.PI*2)/2+0.5 )       }         element.interval = function(tl) {     if(vars.additional<2)return      var loop=gsap.timeline({repeat:vars.repeat, repeatDelay: vars.interval});      loop.to(spiral,additional)      tl.add(loop,vars.interval*1+Math.max(vars.duration*1+vars.delay*1,vars.dur*1+vars.del*1))     }     element.hover = function() {      if(vars.additional==1) gsap.to(spiral,additional)    }    element.run = function(tl) {     tl.from(spiral, {duration:vars.dur, transformOrigin:origin, delay:vars.del,rotation:-1*vars.rot,scale:vars.appear%2,opacity:(vars.appear>2?0:1), ease: vars.eaz},zero);        if(vars.solo){        gsap.set([media,markt],{"display":"none"})        svg.setAttribute("viewBox","1000 0 300 300")       }else{       const left = {duration:vars.duration, stagger:-1*vars.stagger, x:"+="+10.8*vars.translate,delay:vars.delay, transformOrigin:"center",scaleX:1-(vars.scale%2),scaleY:(vars.scale>1?0:1),rotate:vars.rotate,opacity:(vars.fade?0:1),ease:vars.ease},right = {};      Object.assign(right, left, {x:"-="+10.8*vars.translate,rotate:-1*vars.rotate})      tl.from(media, left,zero);      tl.from(markt, right,zero);      }    }  },  animate(tl) {    this.dom.interval(tl)      if(!this.dom.once)this.dom.run(tl)  },  onStart(first){   if(first&&this.dom.once){    this.dom.run(gsap)     }  },    onMouseOver() {     this.dom.hover()  }};